const express = require('express');
const router = express.Router();
const Book = require('../models/index').Book
const bookData =require('./helperData')



const asyncHandler = (innerFunction) =>{
    return async (req, res, next)=>{
        try {
        await innerFunction(req, res, next)
        }  catch (error) {
            next(error)
         }
    }
}

let activeFields = [];

//Identifies all user-defined fields from the Model
(async () => {
    for (let each in await Book.tableAttributes){
        (Book.tableAttributes[each]._autoGenerated === undefined) && activeFields.push(each)
        console.log("IN THE ROUTES")
    }
})()

//Responds a list of Book objects
router.get('/', async(req, res)=>{
    let displayArray = [];
    const bookArray = await Book.findAll();

    //Object creation of the database entries
    bookArray.forEach((each)=> {
        let displayObject = {}
        activeFields.forEach((field) => {displayObject[field] = each.dataValues[field]
        })
        displayArray.push(displayObject);
    })

    res.render('index', {books: displayArray, header: 'All Books', title: "Library App"})
    // res.send(displayArray)
})

//Responds the matched book to the id, 'Name'
router.get('/books/:id', async(req, res, next)=>{
    const instance  = await Book.findOne({
        'where': {
            'title': req.params.id
        }
    })
    res.send(instance)
})


//Posts a new book to the database
router.post('/books', async(req, res, next)=>{
    try {
        await Book.create(req.body)
        res.status(201)
    } catch (error){
        console.log(error)
    }
})

//Updates book in the database
router.post('/books/:id', async(req, res)=>{
    const name = req.params.id;
    const instance = await Book.findOne({
        'where': {
            'title': name
        }
    })
    await instance.update(req.body)
    res.status(200)
})





//Deletes a book
router.post('/books/:id/delete', async (req, res, next) => {


    const instance = await Book.destroy({
        'where': {
            'title': req.params.id
        },
    })

    res.send(`deleted ${req.params.id}`)
})





module.exports = router